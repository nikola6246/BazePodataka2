FJA 1

USE HospitalDBN
GO
/** Object:  UserDefinedFunction [dbo].[fnVratiNullBr]    Script Date: 6/2/2021 8:39:16 PM **/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BrojSestara]
    (

    )
RETURNS INT
AS
BEGIN 
    DECLARE @Cursor INT
    SET @Cursor = 0

    WHILE @Cursor < (SELECT COUNT(*) FROM dbo.Zaposlenis_Sestra WHERE JmbgZap  IS NOT NULL)
    BEGIN
        SET @Cursor = @Cursor + 1
    END
    RETURN @Cursor
END

declare @n int
exec @n = [dbo].[BrojSestara];
select @n

--------------------PROCEDURA 1 ---------------------

CREATE PROCEDURE BolniceUGradu
(@PB INT,
@UkupnoBolnica INT OUT) as

BEGIN TRY
	SELECT @UkupnoBolnica = COUNT(*)
	FROM Grads
	INNER JOIN Bolnicas ON Bolnicas.GradPostanskiBr = Grads.PostanskiBr
	WHERE Bolnicas.GradPostanskiBr = @PB
	
END TRY

BEGIN CATCH
	 SELECT
        ERROR_MESSAGE() AS ErrorNumber,
        ERROR_MESSAGE() AS ErrorMessage;
END CATCH;

DECLARE @Ret INT
EXEC BolniceUGradu 21000, @UkupnoBolnica = @Ret out
SELECT @Ret

--------------------PROCEDURA 2-------------------

CREATE PROCEDURE PacijentiUGradu
(@PB INT,
@UkupnoPacijenata INT OUT) as

BEGIN TRY
	SELECT @UkupnoPacijenata = COUNT(*)
	FROM Grads
	INNER JOIN Bolnicas ON Bolnicas.GradPostanskiBr = Grads.PostanskiBr
	INNER JOIN Pacijents on Bolnicas.BolnicaId = Pacijents.BolnicaBolnicaId
	WHERE Bolnicas.GradPostanskiBr = @PB
	
END TRY

BEGIN CATCH
	 SELECT
        ERROR_MESSAGE() AS ErrorNumber,
        ERROR_MESSAGE() AS ErrorMessage;
END CATCH;

DECLARE @Ret INT
EXEC PacijentiUGradu 21000, @UkupnoPacijenata = @Ret out
SELECT @Ret

--------------------TRIGER 1--------------------------
use HospitalDBN

GO

CREATE TRIGGER [dbo].[PostanskiBrojGradaSandra]
ON [dbo].[Grads]
AFTER INSERT,UPDATE
AS 
BEGIN
    DECLARE @varchar AS varchar(50);
    DECLARE @Var INT
    SET @Var =  (SELECT COUNT(*) FROM Grads WHERE PostanskiBr < 1000)
    IF(@Var > 0)
    BEGIN
        SET @varchar = 'Postanski broj grada ne moze biti manji od 1000 '
        RAISERROR(@varchar,16,1)
    END
END
